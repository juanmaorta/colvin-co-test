// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CardListContainer snapshots should match for CardListContainer component 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CardListContainer
    cards={
        Array [
            Object {
              "id": "3c6f4977-c58b-460f-98ad-acd2fae3a2ce",
              "text": "GoldFinger: He's the man, the man with...",
            },
            Object {
              "id": "da1f1278-3f91-4529-8e55-81b4ffd621ac",
              "text": "Instead of coal, Santa now gives the bad children...",
            },
            Object {
              "id": "d50a2288-c93f-448f-8af6-3dc1b7268606",
              "text": "Knock knock. Who's there?",
            },
            Object {
              "id": "2198fcf9-cb27-48e4-befa-aa77da6f1145",
              "parentId": "3c6f4977-c58b-460f-98ad-acd2fae3a2ce",
              "text": "GoldFinger kid",
            },
          ]
    }
    classes={Object {}}
    deleteCard={[Function]}
    editCard={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <WithStyles(Typography)
          align="center"
          color="textPrimary"
          gutterBottom={true}
          variant="h4"
>
          Choose your black card
</WithStyles(Typography)>,
        <CardList
          cards={
                    Array [
                              Object {
                                "id": "3c6f4977-c58b-460f-98ad-acd2fae3a2ce",
                                "text": "GoldFinger: He's the man, the man with...",
                              },
                              Object {
                                "id": "da1f1278-3f91-4529-8e55-81b4ffd621ac",
                                "text": "Instead of coal, Santa now gives the bad children...",
                              },
                              Object {
                                "id": "d50a2288-c93f-448f-8af6-3dc1b7268606",
                                "text": "Knock knock. Who's there?",
                              },
                              Object {
                                "id": "2198fcf9-cb27-48e4-befa-aa77da6f1145",
                                "parentId": "3c6f4977-c58b-460f-98ad-acd2fae3a2ce",
                                "text": "GoldFinger kid",
                              },
                            ]
          }
          deleteCard={[Function]}
          editCard={[Function]}
/>,
        <div
          className={undefined}
>
          <WithStyles(Button)
                    onClick={undefined}
                    variant="contained"
          >
                    Add a black card
          </WithStyles(Button)>
</div>,
      ],
      "className": undefined,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "align": "center",
          "children": "Choose your black card",
          "color": "textPrimary",
          "gutterBottom": true,
          "variant": "h4",
        },
        "ref": null,
        "rendered": "Choose your black card",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "cards": Array [
            Object {
              "id": "3c6f4977-c58b-460f-98ad-acd2fae3a2ce",
              "text": "GoldFinger: He's the man, the man with...",
            },
            Object {
              "id": "da1f1278-3f91-4529-8e55-81b4ffd621ac",
              "text": "Instead of coal, Santa now gives the bad children...",
            },
            Object {
              "id": "d50a2288-c93f-448f-8af6-3dc1b7268606",
              "text": "Knock knock. Who's there?",
            },
            Object {
              "id": "2198fcf9-cb27-48e4-befa-aa77da6f1145",
              "parentId": "3c6f4977-c58b-460f-98ad-acd2fae3a2ce",
              "text": "GoldFinger kid",
            },
          ],
          "deleteCard": [Function],
          "editCard": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <WithStyles(Button)
            onClick={undefined}
            variant="contained"
>
            Add a black card
</WithStyles(Button)>,
          "className": undefined,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Add a black card",
            "onClick": undefined,
            "variant": "contained",
          },
          "ref": null,
          "rendered": "Add a black card",
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <WithStyles(Typography)
            align="center"
            color="textPrimary"
            gutterBottom={true}
            variant="h4"
>
            Choose your black card
</WithStyles(Typography)>,
          <CardList
            cards={
                        Array [
                                    Object {
                                      "id": "3c6f4977-c58b-460f-98ad-acd2fae3a2ce",
                                      "text": "GoldFinger: He's the man, the man with...",
                                    },
                                    Object {
                                      "id": "da1f1278-3f91-4529-8e55-81b4ffd621ac",
                                      "text": "Instead of coal, Santa now gives the bad children...",
                                    },
                                    Object {
                                      "id": "d50a2288-c93f-448f-8af6-3dc1b7268606",
                                      "text": "Knock knock. Who's there?",
                                    },
                                    Object {
                                      "id": "2198fcf9-cb27-48e4-befa-aa77da6f1145",
                                      "parentId": "3c6f4977-c58b-460f-98ad-acd2fae3a2ce",
                                      "text": "GoldFinger kid",
                                    },
                                  ]
            }
            deleteCard={[Function]}
            editCard={[Function]}
/>,
          <div
            className={undefined}
>
            <WithStyles(Button)
                        onClick={undefined}
                        variant="contained"
            >
                        Add a black card
            </WithStyles(Button)>
</div>,
        ],
        "className": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "align": "center",
            "children": "Choose your black card",
            "color": "textPrimary",
            "gutterBottom": true,
            "variant": "h4",
          },
          "ref": null,
          "rendered": "Choose your black card",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "cards": Array [
              Object {
                "id": "3c6f4977-c58b-460f-98ad-acd2fae3a2ce",
                "text": "GoldFinger: He's the man, the man with...",
              },
              Object {
                "id": "da1f1278-3f91-4529-8e55-81b4ffd621ac",
                "text": "Instead of coal, Santa now gives the bad children...",
              },
              Object {
                "id": "d50a2288-c93f-448f-8af6-3dc1b7268606",
                "text": "Knock knock. Who's there?",
              },
              Object {
                "id": "2198fcf9-cb27-48e4-befa-aa77da6f1145",
                "parentId": "3c6f4977-c58b-460f-98ad-acd2fae3a2ce",
                "text": "GoldFinger kid",
              },
            ],
            "deleteCard": [Function],
            "editCard": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <WithStyles(Button)
              onClick={undefined}
              variant="contained"
>
              Add a black card
</WithStyles(Button)>,
            "className": undefined,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Add a black card",
              "onClick": undefined,
              "variant": "contained",
            },
            "ref": null,
            "rendered": "Add a black card",
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
